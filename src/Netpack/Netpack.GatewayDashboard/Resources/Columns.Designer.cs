//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Netpack.GatewayDashboard.Resources {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Columns {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Columns() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Netpack.GatewayDashboard.Resources.Columns", typeof(Columns).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Endpoints.
        /// </summary>
        public static string EndpointsColumnDisplayOverflowTitle {
            get {
                return ResourceManager.GetString("EndpointsColumnDisplayOverflowTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Starting....
        /// </summary>
        public static string EndpointsColumnDisplayPlaceholder {
            get {
                return ResourceManager.GetString("EndpointsColumnDisplayPlaceholder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на This container is persistent and won&apos;t be stopped when the app host is shut down..
        /// </summary>
        public static string PersistentContainerIconTooltip {
            get {
                return ResourceManager.GetString("PersistentContainerIconTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Container ID: {0}.
        /// </summary>
        public static string ResourceNameDisplayContainerIdText {
            get {
                return ResourceManager.GetString("ResourceNameDisplayContainerIdText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Copy container ID to clipboard.
        /// </summary>
        public static string ResourceNameDisplayCopyContainerIdText {
            get {
                return ResourceManager.GetString("ResourceNameDisplayCopyContainerIdText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Process ID: {0}.
        /// </summary>
        public static string ResourceNameDisplayProcessIdText {
            get {
                return ResourceManager.GetString("ResourceNameDisplayProcessIdText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Resource is running but not in a healthy state. Click for details..
        /// </summary>
        public static string RunningAndUnhealthyResourceStateToolTip {
            get {
                return ResourceManager.GetString("RunningAndUnhealthyResourceStateToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Container args.
        /// </summary>
        public static string SourceColumnDisplayContainerArgsTitle {
            get {
                return ResourceManager.GetString("SourceColumnDisplayContainerArgsTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Command: {0}.
        /// </summary>
        public static string SourceColumnDisplayContainerCommand {
            get {
                return ResourceManager.GetString("SourceColumnDisplayContainerCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Container command.
        /// </summary>
        public static string SourceColumnDisplayContainerCommandTitle {
            get {
                return ResourceManager.GetString("SourceColumnDisplayContainerCommandTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Copy full command to clipboard.
        /// </summary>
        public static string SourceColumnDisplayCopyCommandToClipboard {
            get {
                return ResourceManager.GetString("SourceColumnDisplayCopyCommandToClipboard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Port: {0}.
        /// </summary>
        public static string SourceColumnDisplayPort {
            get {
                return ResourceManager.GetString("SourceColumnDisplayPort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ports: {0}.
        /// </summary>
        public static string SourceColumnDisplayPorts {
            get {
                return ResourceManager.GetString("SourceColumnDisplayPorts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Working directory: {0}.
        /// </summary>
        public static string SourceColumnDisplayWorkingDirectory {
            get {
                return ResourceManager.GetString("SourceColumnDisplayWorkingDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Copy image name and tag to clipboard.
        /// </summary>
        public static string SourceColumnSourceCopyContainerToClipboard {
            get {
                return ResourceManager.GetString("SourceColumnSourceCopyContainerToClipboard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Copy file path to clipboard.
        /// </summary>
        public static string SourceColumnSourceCopyFullPathToClipboard {
            get {
                return ResourceManager.GetString("SourceColumnSourceCopyFullPathToClipboard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Container runtime was found but appears to be unhealthy. Ensure that it is running.
        ///For more information, see https://aka.ms/dotnet/aspire/container-runtime-unhealthy.
        /// </summary>
        public static string StateColumnResourceContainerRuntimeUnhealthy {
            get {
                return ResourceManager.GetString("StateColumnResourceContainerRuntimeUnhealthy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0} is no longer running.
        /// </summary>
        public static string StateColumnResourceExited {
            get {
                return ResourceManager.GetString("StateColumnResourceExited", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0} exited unexpectedly with exit code {1}.
        /// </summary>
        public static string StateColumnResourceExitedUnexpectedly {
            get {
                return ResourceManager.GetString("StateColumnResourceExitedUnexpectedly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unknown.
        /// </summary>
        public static string UnknownStateLabel {
            get {
                return ResourceManager.GetString("UnknownStateLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0} error logs.
        /// </summary>
        public static string UnreadLogErrorsBadgeErrorLogs {
            get {
                return ResourceManager.GetString("UnreadLogErrorsBadgeErrorLogs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на 1 error log.
        /// </summary>
        public static string UnreadLogErrorsBadgeOneErrorLog {
            get {
                return ResourceManager.GetString("UnreadLogErrorsBadgeOneErrorLog", resourceCulture);
            }
        }
    }
}
